Author Wensong He (snowhws@126.com)
1. 安装说明
 extract_html库需要安装两个python开源库，可使用easy_install安装:
 easy_install beautifulsoup4
 easy_install html5lib

2. 使用说明
 1) 默认传入html文档编码都为utf8，extract_html不负责判定编码及转码，结果会保持utf8编码
 2) python版本建议3.x，2.x存在编码问题，如果使用2.x，可做如下修正：
    修改文件：python2.x/Lib/site.py
    找到：setencoding函数
    改正： 
	if 0:
		# Enable to support locale aware default string encodings.
    将此处的0改为1即可
 3) 解析不正确的情况
	当前算法被称为“递归最重要”，重要的衡量方式为文字密度。
	所以如果发现解析出来的不是想要的结果，那么说明该html中的正文比例是偏低的，当前版本的extract_html还无法解析正确。
	以图片为主的网页，以及部分评论文字大于正文的网页存在此类问题。

3. 已完成功能(待验证)
 1) 递归最重要算法——正文抽取算法
 2) 评论抽取(待完善)

4. 下一步
 1) "空白区"处理：
	正文去掉了广告后，可能首尾或中间有大量空白，造成阅读障碍
 2) 去噪：
	去除正文下面的推荐、链接、注释等信息
 3) 完善评论抽取：
	待定，这个有点困难，可能需要机器学习
 4) 结果中提供主要图片链接
 5) 提取"下一页"信息
	待定，暂时没有太大必要
 6) 标题抽取
	在没有准确可行的方法前，不如使用title里的
 7) 无监督机器学习
	建立自学习、自纠正的模型

5. 调用示例
from extract_html import ExtractHtml

res_dict={}

def read_html_doc():
    fr=open("demo.html")
    html_doc="".join(fr.readlines())
    fr.close()
    return html_doc

def run():
    global res_dict
    html_doc=read_html_doc()
    DEBUG=True
    ex_html=ExtractHtml(html_doc, DEBUG)    #using ExtractHtml Lib with two parameters:
                                            #'html_doc' -  The coding must be utf8
                                            #'DEBUG'    -  It's not nessary, the default value is False, when it is True,
                                            #              the lib would output exception information to sys.stderr
    res_dict=ex_html.GetResultDict()        #get result, the result is dict type, four keys in it:
                                            #   keys :
                                            #        1. 'STATE'   - Is exctracting successful or not
                                            #                       'True' means extracting successful
                                            #                       'False' means extracting failure, would give the 'body' to 'content'
                                            #        2. 'title'   - Html title
                                            #                       Now it just return the string in title tag
                                            #                       Try it best to return some strings, but sometimes would return empty
                                            #        3. 'content' - Html content
                                            #                       Not very good for image type html, it's very good for text type html
                                            #                       Coding with utf8
                                            #                       Try it best to return some strings, but sometimes would return empty
                                            #        4. 'comment' - Try to get comments.

def output():
    print res_dict["STATE"]
    #print unicode(res_dict["title"])
    fw=open("content.html","w")
    fw.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">")
    fw.write(res_dict["content"])
    fw.close()
    fw=open("comments.html","w")
    fw.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">")
    fw.write(res_dict["comment"])
    fw.close()

read_html_doc()
run()
output()






